{"version":3,"sources":["webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/chroma-js/chroma.js","webpack:///(webpack)/buildin/module.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","default","io","_inheritsLoose2","_assertThisInitialized2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","convertProps","props","convertedProps","resolutions","sizes","critical","fixed","fluid","loading","imageCache","Object","create","inImageCache","src","hasNativeLazyLoadSupport","HTMLImageElement","prototype","isBrowser","window","hasIOSupport","IntersectionObserver","listeners","WeakMap","listenToIntersections","el","cb","observer","entries","forEach","entry","has","target","get","isIntersecting","intersectionRatio","unobserve","delete","rootMargin","observe","set","noscriptImg","srcSetWebp","srcSet","title","alt","width","height","crossOrigin","Img","forwardRef","ref","style","onLoad","onError","otherProps","createElement","position","top","left","objectFit","objectPosition","propTypes","object","func","Image","_React$Component","_this","call","this","seenBefore","addNoScript","fadeIn","useIOSupport","isVisible","state","imgLoaded","imgCached","imageRef","createRef","handleImageLoaded","bind","handleRef","_proto","componentDidMount","onStartLoad","wasCached","img","current","complete","componentWillUnmount","cleanUpListeners","_this2","imageInCache","setState","currentSrc","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","durationFadeIn","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","opacity","transition","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","image","overflow","key","JSON","stringify","paddingBottom","aspectRatio","bottom","right","base64","tracedSVG","type","dangerouslySetInnerHTML","__html","_image","divStyle","display","Component","defaultProps","fixedObject","shape","number","isRequired","string","srcWebp","fluidObject","bool","oneOfType","oneOf","_default","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_average_lrgb","_guess_formats","_guess_formats_sorted","_input","_interpolators","abs","atan2","bezier","blend","blend_f","brewer","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","floor","hcg2rgb","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_lrgb","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","m","max","multiply","num2rgb","overlay","pow","rgb2cmyk","rgb2css","rgb2hcg","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","round","screen","sin","sqrt","temperature2rgb","unpack","w3cx11","xyz_lab","xyz_rgb","slice","classToType","len","name","o","split","length","toLowerCase","obj","strType","toString","x","min","args","Array","rgb","i","_clipped","_unclipped","Math","arguments","ctor","child","result","apply","module","undefined","__WEBPACK_AMD_DEFINE_RESULT__","version","arg","chk","len1","me","mode","w","push","_rgb","sort","a","b","p","test","console","warn","hex","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","results","colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","l","y","z","isNaN","Yn","Xn","Zn","r","t","t1","t2","t0","Kn","t3","g","ref1","lab","concat","I","I0","I1","c","lab0","lab1","lab2","lab3","ref2","f","scale","cubehelix","start","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","sin_a","s","h","random","code","charAt","col1","col2","interpol","res","alpha","mix","k","v","map","rgba","n","lrgb","xyz0","xyz1","xyz","average","A","cnt","dx","dy","first","xyz2","splice","u","match","substr","parseInt","css","channels","hxa","str","Number","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","_c","_g","hcg","aa","ab","join","named","L","lch","hcl","reverse","cmyk","gl","luminance","lum","cur_lum","max_iter","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","distance","d","sum_sq","deltaE","C","L1","L2","a1","a2","b1","b2","c1","c2","c4","delA","delB","delC","h1","sc","sl","v1","v2","v3","modechan","channel","indexOf","value","clipped","amount","brighten","darker","brighter","saturate","desaturate","premultiply","normal","c0","out","analyze","data","val","MAX_VALUE","sum","values","count","domain","limits","positions","_classes","_colorCache","_colors","_correctLightness","_domain","_gamma","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","_useCache","getClass","getColor","resetCache","setColors","tmap","col","maxc","minc","bypassMap","classes","_m","range","_o","spread","correctLightness","L0","L_actual","L_diff","L_ideal","pol","padding","numColors","dd","dm","samples","cache","nodata","scales","cool","hot","filter","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv0","lbv1","sat","sat0","sat1","n1","n2","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable"],"mappings":"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","file":"1-28a91a8c17a46d01ee4a.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar logDeprecationNotice = function logDeprecationNotice(prop, replacement) {\n  if (process.env.NODE_ENV === \"production\") {\n    return;\n  }\n\n  console.log(\"\\n    The \\\"\" + prop + \"\\\" prop is now deprecated and will be removed in the next major version\\n    of \\\"gatsby-image\\\".\\n    \");\n\n  if (replacement) {\n    console.log(\"Please use \" + replacement + \" instead of \\\"\" + prop + \"\\\".\");\n  }\n}; // Handle legacy props during their deprecation phase\n\n\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n  var resolutions = convertedProps.resolutions,\n      sizes = convertedProps.sizes,\n      critical = convertedProps.critical;\n\n  if (resolutions) {\n    convertedProps.fixed = resolutions;\n    delete convertedProps.resolutions;\n  }\n\n  if (sizes) {\n    convertedProps.fluid = sizes;\n    delete convertedProps.sizes;\n  }\n\n  if (critical) {\n    logDeprecationNotice(\"critical\", \"the native \\\"loading\\\" attribute\");\n    convertedProps.loading = \"eager\";\n  }\n\n  return convertedProps;\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  return imageCache[src] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  imageCache[src] = true;\n}; // Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\n\n\nvar hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nvar isBrowser = typeof window !== \"undefined\";\nvar hasIOSupport = isBrowser && window.IntersectionObserver;\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSetWebp = props.srcSetWebp ? \"<source type='image/webp' srcset=\\\"\" + props.srcSetWebp + \"\\\" \" + sizes + \"/>\" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  var loading = props.loading ? \"loading=\\\"\" + props.loading + \"\\\" \" : \"\";\n  return \"<picture>\" + srcSetWebp + \"<img \" + loading + width + height + sizes + srcSet + src + alt + title + crossOrigin + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n};\n\nvar Img = _react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      loading = props.loading,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\", \"loading\"]);\n  return _react.default.createElement(\"img\", (0, _extends2.default)({\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    loading: loading,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    _this.seenBefore = isBrowser && inImageCache(props);\n    _this.addNoScript = !(props.critical && !props.fadeIn);\n    _this.useIOSupport = !hasNativeLazyLoadSupport && hasIOSupport && !props.critical && !_this.seenBefore;\n    var isVisible = props.critical || isBrowser && (hasNativeLazyLoadSupport || !_this.useIOSupport);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: false,\n      imgCached: false,\n      fadeIn: !_this.seenBefore && props.fadeIn\n    };\n    _this.imageRef = _react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.props.critical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  }; // Specific to IntersectionObserver based lazy-load support\n\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.useIOSupport && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          return _this2.setState({\n            imgLoaded: imageInCache,\n            // `currentSrc` should be a string, but can be `undefined` in IE,\n            // !! operator validates the value is not undefined/null/\"\"\n            imgCached: !!_this2.imageRef.current.currentSrc\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        durationFadeIn = _convertProps.durationFadeIn,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp,\n        loading = _convertProps.loading;\n\n    var shouldReveal = this.state.fadeIn === false || this.state.imgLoaded;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn + \"ms\" : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn + \"ms\"\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName\n    };\n\n    if (fluid) {\n      var image = fluid;\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\"\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, _react.default.createElement(Tag, {\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.base64\n      }, placeholderImageProps)), image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: image.srcSetWebp,\n        sizes: image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading\n      })), this.addNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, image))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _image = fixed;\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: _image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), _image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.base64\n      }, placeholderImageProps)), _image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, _image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: _image.srcSetWebp,\n        sizes: _image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp,\n        loading: loading\n      })), this.addNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title,\n            loading: loading\n          }, _image))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  fadeIn: true,\n  durationFadeIn: 500,\n  alt: \"\",\n  Tag: \"div\",\n  // We set it to `lazy` by default because it's best to default to a performant\n  // setting and let the user \"opt out\" to `eager`\n  loading: \"lazy\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: fixedObject,\n  fluid: fluidObject,\n  fadeIn: _propTypes.default.bool,\n  durationFadeIn: _propTypes.default.number,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string,\n  loading: _propTypes.default.oneOf([\"auto\", \"lazy\", \"eager\"])\n};\nvar _default = Image;\nexports.default = _default;","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.4.1';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 1) {\n      xyz[3] = 1;\n    }\n    return new Color(clip_rgb(xyz));\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'auto';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'auto';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex('rgb');\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    f.nodata = function(d) {\n      if (d != null) {\n        _nacol = chroma(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}